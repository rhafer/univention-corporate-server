#!/usr/share/ucs-test/runner python
## desc: Create shares/printergroup and verify LDAP object
## tags: [udm]
## roles:
##   - domaincontroller_master
##   - domaincontroller_backup
##   - domaincontroller_slave
##   - memberserver
##   - managedclient
## exposure: careful
## packages:
##   - univention-config
##   - univention-directory-manager-tools


from __future__ import absolute_import
from __future__ import print_function
import univention.testing.strings as uts
import univention.testing.ucr
import univention.testing.udm as udm_test
import univention.testing.utils as utils
import random
import time
import subprocess

PRINTER_PROTOCOLS = [ 'usb://', 'ipp://', 'socket://', 'parallel://', 'http://' ]

printquota_installed = utils.package_installed("univention-printquota")

def random_fqdn(ucr):  # type: (univention.testing.ucr.UCSTestConfigRegistry) -> str
	return '%s.%s' % (uts.random_name(), ucr.get('domainname'))

if __name__ == '__main__':
	with univention.testing.ucr.UCSTestConfigRegistry() as ucr, udm_test.UCSTestUDM() as udm:
		ucr.load()

		spoolHost = random_fqdn(ucr)
		## if setQuota=1 and target host doesn't have univention-printquota, then lpadmin fails in cups-printers listener
		setquota = random.choice(['0', '1']) if printquota_installed else '0'

		printer_properties1 = {
			'name': uts.random_name(),
			'spoolHost': spoolHost,
			'uri': '%s %s' % (random.choice(PRINTER_PROTOCOLS), uts.random_ip(),),
			'model': 'foomatic-rip/Generic-PCL_4_Printer-gutenprint-ijs-simplified.5.2.ppd',
			'producer': 'cn=Generic,cn=cups,cn=univention,%s' % (ucr.get('ldap/base'),),
			'setQuota': setQuota,
		}

		print('*** Create shares/printer object')
		print_share_dn1 = udm.create_object(
			'shares/printer',
			position='cn=printers,%s' % (ucr['ldap/base'],),
			**printer_properties1)


		printer_properties2 = {
			'name': uts.random_name(),
			'spoolHost': spoolHost,
			'uri': '%s %s' % (random.choice(PRINTER_PROTOCOLS), uts.random_ip(),),
			'model': 'foomatic-rip/Generic-PCL_4_Printer-gutenprint-ijs-simplified.5.2.ppd',
			'producer': 'cn=Generic,cn=cups,cn=univention,%s' % (ucr.get('ldap/base'),),
			'setQuota': setQuota,
		}

		print('*** Create shares/printer object')
		print_share_dn2 = udm.create_object(
			'shares/printer',
			position='cn=printers,%s' % (ucr['ldap/base'],),
			**printer_properties2)


		printergroup_properties = {
			'name': uts.random_name(),
			'spoolHost': spoolHost,
			'groupMember': [printer_properties1['name'], printer_properties2['name']],
			'sambaName': uts.random_name(),
			'setQuota': setQuota,
			'pagePrice': uts.random_int(bottom_end=1, top_end=999),
			'jobPrice': uts.random_int(bottom_end=1, top_end=999),
		}

		print('*** Create shares/printergroup object')
		printergroup_share_dn = udm.create_object(
			'shares/printergroup',
			position='cn=printers,%s' % (ucr['ldap/base'],),
			**printergroup_properties)

		utils.verify_ldap_object(
			printergroup_share_dn,
			{
				'cn': [printergroup_properties['name']],
				'univentionObjectType': ['shares/printergroup'],
				'univentionPrinterPricePerJob': [printergroup_properties['jobPrice']],
				'univentionPrinterPricePerPage': [printergroup_properties['pagePrice']],
				'univentionPrinterQuotaSupport': [printergroup_properties['setQuota']],
				'univentionPrinterSambaName': [printergroup_properties['sambaName']],
				'univentionPrinterSpoolHost': [printergroup_properties['spoolHost']],
				'univentionPrinterGroupMember': printergroup_properties['groupMember'],
			},
			delay=1)

		print('*** Modify shares/printergroup object')
		printergroup_properties['sambaName'] = uts.random_name()
		udm.modify_object('shares/printergroup', dn=printergroup_share_dn, sambaName=printergroup_properties['sambaName'])
		utils.verify_ldap_object(
			printergroup_share_dn,
			{'univentionPrinterSambaName': [printergroup_properties['sambaName']]},
			delay=1
		)
